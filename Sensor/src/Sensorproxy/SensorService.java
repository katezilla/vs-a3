
package Sensorproxy;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SensorService", targetNamespace = "http://hawsensor/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SensorService {


    /**
     * 
     * @param sender
     * @param reqDisplays
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://hawsensor/SensorService/registerRequest", output = "http://hawsensor/SensorService/registerResponse")
    public boolean register(
        @WebParam(name = "sender", partName = "sender")
        String sender,
        @WebParam(name = "reqDisplays", partName = "reqDisplays")
        StringArray reqDisplays);

    /**
     * 
     * @param sender
     * @param globalDisoplay
     * @param activeSensors
     */
    @WebMethod
    @Action(input = "http://hawsensor/SensorService/updateAllRequest", output = "http://hawsensor/SensorService/updateAllResponse")
    public void updateAll(
        @WebParam(name = "sender", partName = "sender")
        String sender,
        @WebParam(name = "globalDisoplay", partName = "globalDisoplay")
        StringArray globalDisoplay,
        @WebParam(name = "activeSensors", partName = "activeSensors")
        StringArray activeSensors);

    /**
     * 
     * @param sender
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://hawsensor/SensorService/sendTriggerRequest", output = "http://hawsensor/SensorService/sendTriggerResponse")
    public int sendTrigger(
        @WebParam(name = "sender", partName = "sender")
        String sender);

    /**
     * 
     * @param sender
     * @param reqDisplays
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://hawsensor/SensorService/reqDisplayRequest", output = "http://hawsensor/SensorService/reqDisplayResponse")
    public boolean reqDisplay(
        @WebParam(name = "sender", partName = "sender")
        String sender,
        @WebParam(name = "reqDisplays", partName = "reqDisplays")
        StringArray reqDisplays);

    /**
     * 
     * @param sender
     */
    @WebMethod
    @Action(input = "http://hawsensor/SensorService/electionRequest", output = "http://hawsensor/SensorService/electionResponse")
    public void election(
        @WebParam(name = "sender", partName = "sender")
        String sender);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://hawsensor/SensorService/askForCoordinatorRequest", output = "http://hawsensor/SensorService/askForCoordinatorResponse")
    public String askForCoordinator();

    /**
     * 
     * @param sender
     */
    @WebMethod
    @Action(input = "http://hawsensor/SensorService/answerElectionRequest", output = "http://hawsensor/SensorService/answerElectionResponse")
    public void answerElection(
        @WebParam(name = "sender", partName = "sender")
        String sender);

    /**
     * 
     * @param sender
     */
    @WebMethod
    @Action(input = "http://hawsensor/SensorService/newCoordinatorRequest", output = "http://hawsensor/SensorService/newCoordinatorResponse")
    public void newCoordinator(
        @WebParam(name = "sender", partName = "sender")
        String sender);

}
